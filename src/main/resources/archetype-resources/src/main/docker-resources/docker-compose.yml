# service configuration for our dockerized Java app
version: '3.7'

services:
  app:
    # use the Dockerfile next to this file
    build:
        context: ../
        dockerfile: ./docker-resources/app/Dockerfile
    # set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=0.0.0.0:9000,server=y,suspend=y, if remote debugging app is required
    environment:
      - MAVEN_OPTS=
    
    # this runs the app server in the container, be sure not to filter resources once again!
    command: mvn -Pjetty,mariadb
    ports:
      - "8081:8081"
      # remote debugging port, uncomment if not needed
      - "9000:9000"

    # makes the app container aware of the DB container   
    depends_on:
      - db 
    # 
    #expose:
    #  - "3000"

    volumes:
      # project root with pom.xml and src folder
      - ../../:/myapp
      # if you need locale snapshots or use local app/settings.xml
      # - '#var("app_volume_local_repo"):/m2repo'

  db:
      # set the build context 
    build: 
      context: ../
      dockerfile: ./docker-resources/db/Dockerfile
      args:
        DB_CONTEXT: ./docker-resources/db
        MARIADB_ROOT: root
        MARIADB_ROOT_PASSWORD: changeit
        MARIADB_DATABASE: ${turbine_database_name}
        MARIADB_USER: ${turbine_database_user}
        MARIADB_PASSWORD: ${turbine_database_password}
        
    # no environment needed here, only if using image in this file
      
    volumes:
      # - ./db/mysql/init:/docker-entrypoint-initdb.d
      # may activate on *nix
      #- ./db/mysql/conf:/etc/mysql/conf.d
      - ./db/mysql/data:/data
      #- ./db/mysql/log:/var/log/mysql
      - db_data_${turbine_database_name}:/var/lib/mysql:rw  
    restart: always     
    ports:
      # host: container
      - "13306:3306"
      
    #networks:
    #  - db
    command: [mysqld, --default-authentication-plugin=mysql_native_password]

 # this might work only for *nix, check with docker image inspect db
volumes:
  db_data_${turbine_database_name}:
  
#networks:
#  db:
